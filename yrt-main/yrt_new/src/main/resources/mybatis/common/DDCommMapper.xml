<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yrt.project.modular.common.mapper.DDCommMapper">

	<!-- 获取经销商列表(只包含机构ID，机构名称和入库单类型字段) -->
	<select id="selectAllOrg4DropDownList" parameterType="map" resultType="map">
		SELECT
			dealer_inner_sn as org_id, name, social_credit_code, 'DD' as billsType,
			case when certification_status = 2 then '已认证' else '未认证' end as status
		FROM dealer
		WHERE 1=1
	        <if test="id != null">AND dealer_inner_sn != #{id}</if>
	        AND status=1
	        AND is_delete = 0
	        <if test="name != null">and name like concat('%', #{name}, '%')</if>
	</select>
	
	<select id="selectRelatedOrg4DropDownList" parameterType="map" resultType="map">
		SELECT DISTINCT *
		FROM(
		<if test="isPurchase != null">
			SELECT 
		        dealer_b_inner_sn as org_id, d.name, social_credit_code, 'DD' as billsType,
		        case when certification_status = 2 then '已认证' else '未认证' end as status
			FROM dealer_dealer_contract c
			LEFT JOIN dealer d on d.dealer_inner_sn=c.dealer_b_inner_sn
			WHERE 1=1
			        AND c.dealer_a_inner_sn = #{id}
			        AND c.status in (3,4,5,7)
			        AND d.status=1
			        AND d.is_delete=0
		</if>
		<if test="isPurchase != null and isSale != null">UNION ALL</if>
		<if test="isSale != null">
			SELECT 
		        dealer_a_inner_sn as org_id, d.name, social_credit_code, 'DD' as billsType,
		        case when certification_status = 2 then '已认证' else '未认证' end as status
			FROM dealer_dealer_contract c
			LEFT JOIN dealer d on d.dealer_inner_sn=c.dealer_a_inner_sn
			WHERE 1=1
			        AND c.dealer_b_inner_sn = #{id}
			        AND c.status in (3,4,5,7)
			        AND d.status=1
			        AND d.is_delete=0
		</if>
		) a
		WHERE 1=1
	    <if test="name != null">and name like concat('%', #{name}, '%')</if>
	</select>
	
	<!-- 获取厂商产品列表(平台所有发布产品) -->
	<select id="selectVendorProductList" parameterType="map" resultType="ResponseProductInfo">
		select 
			concat(ps.vendor_inner_sn, '-',  ps.product_inner_sn, '-', ps.specification_inner_sn, '-1') as id,
			ps.vendor_inner_sn, v.name as vendor_name, ps.product_inner_sn, p.name as product_name, ps.specification_inner_sn, ps.specification, 
			1 as product_type, p.newest_register_sn as mdrf_sn, ps.specification_vendor_sn, ps.common_use_unit_inner_sn, ps.common_use_unit,
			u.unit_inner_sn as min_unit_inner_sn, u.name as min_unit
		from product_specification ps
		join product p using(vendor_inner_sn, product_inner_sn)
		join vendor v using(vendor_inner_sn)
		join product_unit u on ps.vendor_inner_sn=u.vendor_inner_sn and ps.product_inner_sn=u.product_inner_sn 
			and ps.specification_inner_sn = u.specification_inner_sn and u.parent_unit_inner_sn is null and u.is_delete = 0
		where 1=1
			and p.release_status = 1  and p.status = 1 and p.is_delete = 0 and v.is_delete = 0
	        and ps.status = 1
	        and ps.is_delete = 0 and length (trim(ps.common_use_unit))>0
       		<if test="type_inner_sn != null">and p.type_inner_sn = #{type_inner_sn}</if>
			<if test="code68_sn != null">and p.code68_sn = #{code68_sn}</if>
			<if test="product_name != null and product_name != ''">and (p.name like concat('%', #{product_name}, '%') OR p.pinyin like concat('%', #{product_name}, '%'))</if>
			<if test="vendor_inner_sn != null">and p.vendor_inner_sn = #{vendor_inner_sn}</if>
			<if test="specification_vendor_sn != null and specification_vendor_sn != ''">and ps.specification_vendor_sn like concat('%', #{specification_vendor_sn}, '%')</if>
            <if test="specification != null and specification != ''">and ps.specification like concat('%', #{specification}, '%')</if>
            <if test="product_inner_sn != null">AND ps.product_inner_sn = #{product_inner_sn}</if>
			<if test="specification_inner_sn != null">AND ps.specification_inner_sn = #{specification_inner_sn}</if>
	</select>
	
	<select id="selectContractVendorProductList" parameterType="map" resultType="ResponseProductInfo">
		select 
			concat(a.vendor_inner_sn, '-',  a.product_inner_sn, '-', a.specification_inner_sn, '-1') as id,
			a.*
		from(
			select distinct 
				dv.product_vendor_inner_sn as vendor_inner_sn, dv.product_vendor_name as vendor_name, dv.product_inner_sn, dv.product_name, 
				dv.specification_inner_sn, dv.specification, 1 as product_type, p.newest_register_sn as mdrf_sn, ps.specification_vendor_sn,
				dv.unit_inner_sn as common_use_unit_inner_sn, dv.unit as common_use_unit, u.unit_inner_sn as min_unit_inner_sn, u.name as min_unit
			from dealer_dealer_contract_product dv
			join product p on p.vendor_inner_sn=dv.product_vendor_inner_sn and p.product_inner_sn=dv.product_inner_sn
			join product_specification ps on ps.vendor_inner_sn=dv.product_vendor_inner_sn and ps.product_inner_sn=dv.product_inner_sn 
				and ps.specification_inner_sn=dv.specification_inner_sn
			join dealer_dealer_contract c using(dealer_a_inner_sn,dealer_b_inner_sn,contract_inner_sn)
			join product_unit u on ps.vendor_inner_sn=u.vendor_inner_sn and ps.product_inner_sn=u.product_inner_sn 
			     and ps.specification_inner_sn = u.specification_inner_sn and u.parent_unit_inner_sn is null and u.is_delete = 0
			where dv.dealer_a_inner_sn = #{org_id} and dv.dealer_b_inner_sn = #{organization_inner_sn}
		        and c.status IN (4,5,7)
				<if test="type_inner_sn != null">and p.type_inner_sn = #{type_inner_sn}</if>
				<if test="code68_sn != null">and p.code68_sn = #{code68_sn}</if>
				<if test="product_name != null and product_name != ''">and (dv.product_name like concat('%', #{product_name}, '%') OR p.pinyin like concat('%', #{product_name}, '%'))</if>
				<if test="vendor_inner_sn != null">and dv.product_vendor_inner_sn = #{vendor_inner_sn}</if>
				<if test="specification_vendor_sn != null and specification_vendor_sn != ''">and ps.specification_vendor_sn like concat('%', #{specification_vendor_sn}, '%')</if>
	            <if test="specification != null and specification != ''">and dv.specification like concat('%', #{specification}, '%')</if>
	            <if test="product_inner_sn != null">AND dv.product_inner_sn = #{product_inner_sn}</if>
				<if test="specification_inner_sn != null">AND dv.specification_inner_sn = #{specification_inner_sn}</if>
        ) a
	</select>
	
	<!-- 获取经销商自建产品列表 -->
	<select id="selectDealerProductList" parameterType="map" resultType="ResponseProductInfo">
		select
			concat(ps.dealer_inner_sn, '-',  ps.product_inner_sn, '-', ps.specification_inner_sn, '-0') as id,
			ps.dealer_inner_sn, d.name as dealer_name, ps.product_inner_sn, p.name as product_name, ps.specification_inner_sn, ps.specification,
			ps.common_use_unit_inner_sn, ps.common_use_unit, 0 as product_type, u.unit_inner_sn as min_unit_inner_sn, u.name as min_unit
		from dealer_product_specification ps
		join dealer d using(dealer_inner_sn)
		join dealer_product p using(dealer_inner_sn, product_inner_sn)
		join dealer_product_unit u on ps.dealer_inner_sn=u.dealer_inner_sn and ps.product_inner_sn=u.product_inner_sn 
			and ps.specification_inner_sn = u.specification_inner_sn and u.parent_unit_inner_sn is null and u.is_delete = 0
		where p.is_delete = 0 and p.status=1 and ps.status=1 and ps.is_delete = 0
		<if test="ids != null and ids != ''">and ps.dealer_inner_sn in (${ids})</if>
		<if test="dealer_inner_sn != null">and ps.dealer_inner_sn = #{dealer_inner_sn}</if>
		<if test="code68_sn != null">and p.code68_sn = #{code68_sn}</if>
		<if test="name != null and name != ''">and (p.name like concat('%', #{name}, '%') OR p.pinyin like concat('%', #{name}, '%'))</if>
	</select>
	
	<select id="selectContractDealerProductList" parameterType="map" resultType="ResponseProductInfo">
        select 
        	concat(a.dealer_inner_sn, '-',  a.product_inner_sn, '-', a.specification_inner_sn, '-0') as id,
        	a.*
        from(
        <if test="isPurchase != null">
	        select distinct 
		        hp.dealer_b_inner_sn as dealer_inner_sn, hp.product_dealer_name as dealer_name, hp.product_inner_sn, hp.product_name, hp.specification_inner_sn, hp.specification, 
		        hp.unit_inner_sn as common_use_unit_inner_sn, hp.unit as common_use_unit, 0 as product_type, u.unit_inner_sn as min_unit_inner_sn, u.name as min_unit
			from dealer_dealer_contract_dealer_product hp
			join dealer_product p on p.dealer_inner_sn=hp.dealer_b_inner_sn and p.product_inner_sn=hp.product_inner_sn
			join dealer_product_specification ps on ps.dealer_inner_sn=hp.dealer_b_inner_sn and ps.product_inner_sn=hp.product_inner_sn and ps.specification_inner_sn=hp.specification_inner_sn
			join dealer_product_unit u on ps.dealer_inner_sn=u.dealer_inner_sn and ps.product_inner_sn=u.product_inner_sn 
				and ps.specification_inner_sn = u.specification_inner_sn and u.parent_unit_inner_sn is null and u.is_delete = 0
			where  1=1
				and hp.dealer_a_inner_sn = #{ids} and hp.dealer_b_inner_sn = #{organization_inner_sn}
				and (hp.dealer_a_inner_sn,hp.dealer_b_inner_sn,hp.contract_inner_sn) in (select dealer_a_inner_sn,dealer_b_inner_sn,contract_inner_sn from dealer_dealer_contract where dealer_a_inner_sn = #{ids} and dealer_b_inner_sn = #{organization_inner_sn} and status in (4,5,7))
				<if test="name != null and name != ''">and (hp.product_name like concat('%', #{name}, '%') OR p.pinyin like concat('%', #{name}, '%'))</if>
				<if test="code68_sn != null">and p.code68_sn = #{code68_sn}</if>
		</if>
		<if test="isPurchase != null and isSale != null">UNION DISTINCT</if>
		<if test="isSale != null">
			select distinct 
		        hp.dealer_b_inner_sn as dealer_inner_sn, hp.product_dealer_name as dealer_name, hp.product_inner_sn, hp.product_name, hp.specification_inner_sn, hp.specification, 
		        hp.unit_inner_sn as common_use_unit_inner_sn, hp.unit as common_use_unit, 0 as product_type, u.unit_inner_sn as min_unit_inner_sn, u.name as min_unit
			from dealer_dealer_contract_dealer_product hp
			join dealer_product p on p.dealer_inner_sn=hp.dealer_b_inner_sn and p.product_inner_sn=hp.product_inner_sn
			join dealer_product_specification ps on ps.dealer_inner_sn=hp.dealer_b_inner_sn and ps.product_inner_sn=hp.product_inner_sn and ps.specification_inner_sn=hp.specification_inner_sn
			join dealer_product_unit u on ps.dealer_inner_sn=u.dealer_inner_sn and ps.product_inner_sn=u.product_inner_sn 
				and ps.specification_inner_sn = u.specification_inner_sn and u.parent_unit_inner_sn is null and u.is_delete = 0
			where  1=1
				and hp.dealer_a_inner_sn = #{organization_inner_sn} and hp.dealer_b_inner_sn = #{ids}
				and (hp.dealer_a_inner_sn,hp.dealer_b_inner_sn,hp.contract_inner_sn) in (select dealer_a_inner_sn,dealer_b_inner_sn,contract_inner_sn from dealer_dealer_contract where dealer_a_inner_sn = #{organization_inner_sn} and dealer_b_inner_sn = #{ids} and status in (4,5,7))
				<if test="name != null and name != ''">and hp.product_name like concat('%', #{name}, '%')</if>
				<if test="code68_sn != null">and p.code68_sn = #{code68_sn}</if>
		</if>
		)a
	</select>
	
	<!-- 获取仓库人员 -->
	<select id="selectWarehouseEmployeeList" parameterType="map" resultType="map">
		select distinct m.employee_inner_sn, e.name as employee_name
		from dealer_employee_dealer_warehouse_model m
		INNER join dealer_employee e using(dealer_inner_sn,employee_inner_sn)
		where 1=1
			AND e.status in (0,1)
			AND e.is_delete = 0
			and m.dealer_inner_sn = #{org_id}
			<if test="type != null">and m.type = #{type} </if>
			<if test="warehouse_model_inner_sn != null">and m.warehouse_model_inner_sn in (${warehouse_model_inner_sn}) </if>
	</select>
	
	<select id="selectVendorInventoryProductList" parameterType="map" resultType="ResponseProductInfo">
		select distinct concat(ps.vendor_inner_sn, '-',  ps.product_inner_sn, '-', ps.specification_inner_sn, '-1') as id,
			p.product_vendor_inner_sn as vendor_inner_sn, p.product_vendor_name as vendor_name, p.product_inner_sn, p.product_name,
			p.specification_inner_sn, p.specification, 1 as product_type, p1.newest_register_sn as mdrf_sn, ps.common_use_unit_inner_sn, ps.common_use_unit, 
			ps.specification_vendor_sn, p.unit as min_unit, p.unit_inner_sn as min_unit_inner_sn
		from dealer_product_min_unit_inventory p
		left join product p1 on p1.vendor_inner_sn=p.product_vendor_inner_sn and p1.product_inner_sn=p.product_inner_sn
		left join product_specification ps on ps.vendor_inner_sn=p.product_vendor_inner_sn and ps.product_inner_sn=p.product_inner_sn and ps.specification_inner_sn=p.specification_inner_sn
		where 1=1
        	and quantity > 0
        	and p.dealer_inner_sn = #{org_id}
      		<if test="type_inner_sn != null">and p1.type_inner_sn = #{type_inner_sn}</if>
			<if test="code68_sn != null">and p1.code68_sn = #{code68_sn}</if>
			<if test="product_name != null and product_name != ''">and (p.product_name like concat('%', #{product_name}, '%') OR p1.pinyin like concat('%', #{product_name}, '%'))</if>
			<if test="vendor_inner_sn != null">and p.product_vendor_inner_sn = #{vendor_inner_sn}</if>
			<if test="specification != null and specification != ''">and p.specification like concat('%', #{specification}, '%')</if>
			<if test="specification_vendor_sn != null and specification_vendor_sn != ''">and ps.specification_vendor_sn like concat('%', #{specification_vendor_sn}, '%')</if>
		ORDER BY p.product_vendor_inner_sn ASC, p.product_inner_sn ASC , p.specification_inner_sn ASC
	</select>
</mapper>