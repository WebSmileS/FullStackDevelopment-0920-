<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yrt.project.modular.product.mapper.TmpProductMapper">

	<resultMap type="TmpProduct" id="TmpProductResult">
		<id      property="vendor_inner_sn" column="vendor_inner_sn"/><!-- 厂商内部编号 -->
		<result  property="vendor_name" column="vendor_name"/><!-- 厂商名称 -->
		<result  property="product_inner_sn" column="product_inner_sn"/><!-- 产品内部编号 -->
		<result property="type_inner_sn" column="type_inner_sn"/><!-- 自定义分类内部编号  -->
		<result property="type_name" column="type_name"/><!-- 自定义分类名称  -->
		<result property="code68_sn" column="code68_sn"/><!-- 68分类目录编号  -->
		<result property="code68_name" column="code68_name"/><!-- 68分类目录名称  -->
		<result  property="status" column="status"/><!-- 状态 -->
		<result  property="storage_condition" column="storage_condition"/><!-- 存储条件 -->
		<result  property="health_care_type" column="health_care_type"/><!-- 医保类型 -->
		<result property="name" column="name"/><!-- 名称* -->
		<result property="product_vendor_sn" column="product_vendor_sn"/><!-- 产品编号 -->
		<result property="specifications" column="specifications"/><!-- 型号规格(总览) -->
		<result property="description" column="description"/><!-- 描述 -->
		<result property="type" column="type"/><!-- 产品类型 -->
		<result  property="code68_type" column="code68_type"/><!-- 医疗器械分类目录类别:1-一类 2-二类 3-三类 -->
		<result property="audit_description" column="audit_description"/><!-- 审核描述 -->
		<result  property="source" column="data_source"/><!-- 数据来源 -->
		<result property="operation_organization" column="operation_organization"/><!-- 操作机构 -->
		<result property="audit_level" column="audit_level"/><!-- 审核级别 0-一级 1-二级 2-三级 3-四级 -->
		<result property="operation" column="operation"/><!-- 操作 0-删除 1-新增 2-修改 -->
		<result property="operation_time" column="operation_time"/><!-- 操作时间 -->
		<result property="is_tmp" column="is_tmp"/><!-- 是否待审核 0-不是 1-是 -->
		<result property="hasCertImage" column="hasCertImage"/><!-- 是否存在注册证图片  -->
	</resultMap>
	
	<sql id="selectTmpProduct">
		select p.vendor_inner_sn, v.name as vendor_name, p.product_inner_sn, p.type_inner_sn, pt.type as type_name, 
	        p.code68_sn, c.name as code68_name, p.data_source, p.status, p.storage_condition, p.health_care_type, 
	        p.name, p.product_vendor_sn, p.type, p.product_vendor_sn, p.specifications, p.description, 
	        p.operation_organization, p.audit_level, p.operation, p.operation_time, p.is_tmp, p.audit_description, p.code68_type,
	        CASE when IFNULL(i1.total,i2.total)>0 then 'true' else 'false' end as hasCertImage
		from (
	        select 
		        vendor_inner_sn, product_inner_sn, type_inner_sn, code68_sn, storage_condition, health_care_type, type, status, name,
		        product_vendor_sn, description, specifications, data_source, operation_organization, audit_level, operation,
		        operation_time, audit_description, 1 as is_tmp, code68_type
	        from product_temp
	        where operation = 1 and data_source=#{data_source} and operation_organization=#{operation_organization}
            union all
	        select 
                ifnull(p2.vendor_inner_sn, p1.vendor_inner_sn) as vendor_inner_sn,
                ifnull(p2.product_inner_sn, p1.product_inner_sn) as product_inner_sn,
                ifnull(p2.type_inner_sn, p1.type_inner_sn) as type_inner_sn,
                ifnull(p2.code68_sn, p1.code68_sn) as code68_sn,
                ifnull(p2.storage_condition, p1.storage_condition) as storage_condition,
                ifnull(p2.health_care_type, p1.health_care_type) as health_care_type,
                ifnull(p2.type, p1.type) as type,
                ifnull(p2.status, p1.status) as status,
                ifnull(p2.name, p1.name) as name,
                ifnull(p2.product_vendor_sn, p1.product_vendor_sn) as product_vendor_sn,
                ifnull(p2.description, p1.description) as description,
                ifnull(p2.specifications, p1.specifications) as specifications,
                ifnull(p2.data_source, p1.data_source) as data_source,
                p2.operation_organization,
                p2.audit_level,
                p2.operation,
                p2.operation_time,
                p2.audit_description,
                CASE WHEN ISNULL(p2.product_inner_sn) THEN 0 ELSE 1 END as is_tmp,
                ifnull(p2.code68_type, p1.code68_type) as code68_type
	        from product p1
	        left join product_temp p2 on p1.vendor_inner_sn=p2.vendor_inner_sn and p1.product_inner_sn=p2.product_inner_sn 
               and p2.operation!=1 and p2.data_source=#{data_source} and p2.operation_organization=#{operation_organization}
            where p1.release_status=1 and p1.is_delete=0 
        ) p
		LEFT JOIN (
	        SELECT vendor_inner_sn, product_inner_sn, data_source, operation_organization,  COUNT(*) AS total FROM product_mdrf_image_temp GROUP BY vendor_inner_sn,product_inner_sn, data_source, operation_organization
		) i1 USING(vendor_inner_sn, product_inner_sn, data_source, operation_organization)
		LEFT JOIN (
			SELECT vendor_inner_sn, product_inner_sn, COUNT(*) AS total
            FROM product_mdrf_image i
            INNER JOIN product_mdrf m using(vendor_inner_sn, product_inner_sn, mdrf_inner_sn)
            where m.is_delete = 0
            GROUP BY vendor_inner_sn,product_inner_sn
		) i2 USING(vendor_inner_sn,product_inner_sn)
		left join vendor v using(vendor_inner_sn)
		left join code68 c using(code68_sn)
		left join product_type pt using(type_inner_sn)
	
	</sql>
	<select id="selectTmpProductInfo" parameterType="map" resultMap="TmpProductResult">
		select p.vendor_inner_sn, v.name as vendor_name, p.product_inner_sn, p.type_inner_sn, pt.type as type_name, 
		        p.code68_sn, c.name as code68_name, p.data_source, p.status, p.storage_condition, p.health_care_type, 
		        p.name, p.product_vendor_sn, p.type, p.product_vendor_sn, p.specifications, p.description, 
		        p.operation_organization, p.audit_level, p.operation, p.operation_time, 1 as is_tmp, p.audit_description, p.code68_type
		from product_temp p
		left join vendor v on v.vendor_inner_sn = p.vendor_inner_sn
		left join code68 c on c.code68_sn = p.code68_sn
		left join product_type pt on pt.type_inner_sn = p.type_inner_sn
		where p.data_source=#{data_source} and operation_organization = #{operation_organization}
			and p.vendor_inner_sn = #{vendor_inner_sn} and p.product_inner_sn = #{product_inner_sn}
	</select>
	
	<select id="searchTmpProduct" parameterType="map" statementType="CALLABLE"  useCache="false" flushCache="true" resultMap="TmpProductResult">
		<!-- <include refid="selectTmpProduct"/>
		where 1=1
		<if test="type_inner_sn != null">and p.type_inner_sn = #{type_inner_sn}</if>
		<if test="code68_sn != null">and p.code68_sn = #{code68_sn}</if>
		<if test="name != null and name != ''">and p.name like concat('%', #{name}, '%')</if>
		<if test="vendor_inner_sn != null">and p.vendor_inner_sn = #{vendor_inner_sn}</if> -->
		call d_get_redact_products(
			#{data_source_i,mode=IN},
            #{operation_organization_i,mode=IN},
            #{vendor_inner_sn_i,mode=IN},
            #{type_inner_sn_i,mode=IN},
            #{code68_sn_i,mode=IN},
            #{product_name_i,mode=IN},
            #{page_i,mode=IN},
            #{row_i,mode=IN},
            #{total_row_o ,mode=OUT,jdbcType=NUMERIC},
            #{result_o ,mode=OUT,jdbcType=NUMERIC},
			#{error_code_o ,mode=OUT,jdbcType=NUMERIC},
			#{sql_state_o ,mode=OUT,jdbcType=VARCHAR},
			#{message_string_o ,mode=OUT,jdbcType=VARCHAR}
         )
	</select>
	
	<select id="addOrEditTmpProduct" parameterType="map" statementType="CALLABLE"  useCache="false" flushCache="true" resultType="map">
         call c_operate_product_temp(
            #{data_source_i,mode=IN},
            #{operation_organization_i,mode=IN},
            #{vendor_inner_sn_i,mode=IN},
            #{product_inner_sn_i,mode=IN},
            #{type_inner_sn_i,mode=IN},
            #{code68_sn_i,mode=IN},
            #{storage_condition_i,mode=IN},
            #{health_care_type_i,mode=IN},
            #{type_i,mode=IN},
            #{operation_i,mode=IN},
            #{audit_level_i,mode=IN},
            #{status_i,mode=IN},
            #{name_i,mode=IN},
            #{product_vendor_sn_i,mode=IN},
            #{description_i,mode=IN},
            #{specifications_i,mode=IN},
            #{code68_type_i,mode=IN},
            #{product_inner_sn_o ,mode=OUT,jdbcType=NUMERIC},
            #{result_o ,mode=OUT,jdbcType=NUMERIC},
			#{error_code_o ,mode=OUT,jdbcType=NUMERIC},
			#{sql_state_o ,mode=OUT,jdbcType=VARCHAR},
			#{message_string_o ,mode=OUT,jdbcType=VARCHAR}
         )
	</select>
	
	<update id="updateTmpProductStatus" parameterType="map">
		update product_temp
		<set>
			<if test="status != null">status = #{status},</if>
			<if test="description != null">description = #{description},</if>
			<if test="audit_description != null">audit_description = #{audit_description},</if>
			<if test="operation_time != null">operation_time = #{operation_time},</if>
		</set>
		where 1=1
			and data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
	</update>
	
	<delete id="deleteTmpProduct" parameterType="map">
	  	delete from product_temp 
	  	where data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
	</delete>
	
	<!-- 产品相关图片 -->
	<resultMap type="TmpProductRelImage" id="ImageResult">
		<result property="vendor_inner_sn" column="vendor_inner_sn"/><!-- 厂商内部编号 -->
		<result property="product_inner_sn" column="product_inner_sn"/><!-- 产品内部编号 -->
		<result property="image_inner_sn" column="image_inner_sn"/><!-- 图片内部编号  -->
		<result property="type" column="type"/><!-- 类别 -->
		<result property="begin_date" column="begin_date"/><!-- 开始日期 -->
		<result property="end_date" column="end_date"/><!-- 截止日期 -->
		<result property="url" column="url"/><!-- 统一资源定位符  -->
		<result property="status" column="status"/><!-- 状态 -->
		<result property="audit_description" column="audit_description"/><!-- 审核描述 -->
		<result  property="source" column="data_source"/><!-- 数据来源 -->
		<result property="operation_organization" column="operation_organization"/><!-- 操作机构 -->
		<result property="audit_level" column="audit_level"/><!-- 审核级别 0-一级 1-二级 2-三级 3-四级 -->
		<result property="operation" column="operation"/><!-- 操作 0-删除 1-新增 2-修改 -->
		<result property="operation_time" column="operation_time"/><!-- 操作时间 -->
		<result property="is_tmp" column="is_tmp"/><!-- 是否待审核 0-不是 1-是 -->
	</resultMap>
	
	<sql id="selectCertImage">
        select vendor_inner_sn, product_inner_sn, image_inner_sn, type, url, begin_date, end_date, status, 
	        data_source, operation_organization, operation, audit_level, operation_time, audit_description, is_tmp
		from (
	        select 
	        	vendor_inner_sn, product_inner_sn, image_inner_sn, type, url, begin_date, end_date, status, 
	        	data_source, operation_organization, operation, audit_level, operation_time, audit_description, 1 as is_tmp
	        from product_image_temp
	        where operation = 1 and data_source=#{data_source} and operation_organization=#{operation_organization}
	        	and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
	        union all
	        select
                ifnull(p2.vendor_inner_sn, p1.vendor_inner_sn) as vendor_inner_sn,
                ifnull(p2.product_inner_sn, p1.product_inner_sn) as product_inner_sn,
                ifnull(p2.image_inner_sn, p1.image_inner_sn) as image_inner_sn,
                ifnull(p2.type, p1.type) as type,
                ifnull(p2.url, p1.url) as url,
                ifnull(p2.begin_date, p1.begin_date) as begin_date,
                ifnull(p2.end_date, p1.end_date) as end_date,
                p2.status,
                p2.data_source,
                p2.operation_organization,
                p2.operation,
                p2.audit_level,
                p2.operation_time,
                p2.audit_description,
                CASE WHEN ISNULL(p2.product_inner_sn) THEN 0 ELSE 1 END as is_tmp
	        from product_image p1
	        left join product_image_temp p2 on p1.vendor_inner_sn=p2.vendor_inner_sn and p1.product_inner_sn=p2.product_inner_sn and p1.image_inner_sn=p2.image_inner_sn
	        	and p2.data_source=#{data_source} and p2.operation_organization=#{operation_organization}
	        	and p2.operation!=1 and p2.vendor_inner_sn = #{vendor_inner_sn} and p2.product_inner_sn = #{product_inner_sn}
	        where 1=1
	        	and p1.vendor_inner_sn = #{vendor_inner_sn} and p1.product_inner_sn = #{product_inner_sn}
		) p
    </sql>
    
	<select id="selectCertImageList" parameterType="map" resultMap="ImageResult">
		<include refid="selectCertImage"/>
		where type=1 
			and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
	</select>
	
	<select id="selectCertImageInfo" parameterType="map" resultMap="ImageResult">
		<!-- <include refid="selectCertImage"/> -->
		select vendor_inner_sn, product_inner_sn, image_inner_sn, type, url, begin_date, end_date, status, 
	        data_source, operation_organization, operation, audit_level, operation_time, 1 as is_tmp
		from product_image_temp
		where type=1 
			and data_source = #{data_source} 
			and operation_organization = #{operation_organization}
			and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} 
			and image_inner_sn = #{image_inner_sn}
	</select>
	
	<update id="updateTmpProductImageStatus" parameterType="map">
		update product_image_temp
		<set>
			<if test="status != null">status = #{status},</if>
			<if test="description != null">audit_description = #{description},</if>
			<if test="operation_time != null">operation_time = #{operation_time},</if>
		</set>
		where type=1
			and data_source = #{data_source} 
			and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} 
			<if test="image_inner_sn != null">and image_inner_sn = #{image_inner_sn}</if>
	</update>
	
	<delete id="deleteTmpProductImage" parameterType="map">
		delete from product_image_temp
		where type=1 and data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} 
			<if test="image_inner_sn != null">and image_inner_sn = #{image_inner_sn}</if>
	</delete>
	
	<select id="addOrEditTmpProductImage" parameterType="map" statementType="CALLABLE"  useCache="false" flushCache="true" resultType="map">
         call c_operate_product_image_temp(
         	#{data_source_i,mode=IN},
         	#{operation_organization_i,mode=IN},
            #{vendor_inner_sn_i,mode=IN},
            #{product_inner_sn_i,mode=IN},
            #{image_inner_sn_i,mode=IN},
            #{operation_i,mode=IN},
            #{audit_level_i,mode=IN},
            #{status_i,mode=IN},
            #{type_i,mode=IN},
            #{url_i,mode=IN},
            #{image_inner_sn_o ,mode=OUT,jdbcType=NUMERIC},
            #{result_o ,mode=OUT,jdbcType=NUMERIC},
			#{error_code_o ,mode=OUT,jdbcType=NUMERIC},
			#{sql_state_o ,mode=OUT,jdbcType=VARCHAR},
			#{message_string_o ,mode=OUT,jdbcType=VARCHAR}
         )  
	</select>
	
	<!-- 待审核产品型号规格 -->
	<resultMap type="TmpProductSpecification" id="TmpSpecResult">
		<result property="vendor_inner_sn" column="vendor_inner_sn"/><!-- 厂商内部编号 -->
		<result property="product_inner_sn" column="product_inner_sn"/><!-- 产品内部编号 -->
		<result property="specification_inner_sn" column="specification_inner_sn"/><!-- 型号规格内部编号  -->
		<result property="status" column="status"/><!-- 状态 -->
		<result property="specification" column="specification"/><!-- 型号规格*  -->
		<result property="specification_vendor_sn" column="specification_vendor_sn"/><!-- 产品编码（自建）*  -->
		<result property="audit_description" column="audit_description"/><!-- 审核描述 -->
		<result property="operation_organization" column="operation_organization"/><!-- 操作机构 -->
		<result property="audit_level" column="audit_level"/><!-- 审核级别 0-一级 1-二级 2-三级 3-四级 -->
		<result property="operation" column="operation"/><!-- 操作 0-删除 1-新增 2-修改 -->
		<result property="operation_time" column="operation_time"/><!-- 操作时间 -->
		<result property="source" column="data_source"/><!-- 数据来源 -->
		<result property="is_tmp" column="is_tmp"/><!-- 是否待审核 0-不是 1-是 -->
		<result property="unit_name" column="unit_name"/><!-- 单位名称 -->
	</resultMap>
	
	<sql id="selectTmpSpec">
        select data_source, operation_organization, vendor_inner_sn, product_inner_sn, specification_inner_sn, status, specification, specification_vendor_sn, 
		        operation, audit_level, operation_time, audit_description, is_tmp, unit_name
		from (
            select
            	data_source, operation_organization, operation, audit_level, operation_time, audit_description,
            	vendor_inner_sn, product_inner_sn, specification_inner_sn, status, specification, specification_vendor_sn, 
		        1 as is_tmp, unit_name
            from product_specification_temp
            where operation = 1 and data_source=#{data_source} and operation_organization=#{operation_organization}
            	and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} 
            union all
	        select 
                p2.data_source, p2.operation_organization, p2.operation, p2.audit_level, p2.operation_time, audit_description,
                ifnull(p2.vendor_inner_sn, p1.vendor_inner_sn) as vendor_inner_sn,
                ifnull(p2.product_inner_sn, p1.product_inner_sn) as product_inner_sn,
                ifnull(p2.specification_inner_sn, p1.specification_inner_sn) as specification_inner_sn,
                ifnull(p2.status, p1.status) as status,
                ifnull(p2.specification, p1.specification) as specification,
                ifnull(p2.specification_vendor_sn, p1.specification_vendor_sn) as specification_vendor_sn,
                CASE WHEN ISNULL(p2.specification_inner_sn) THEN 0 ELSE 1 END as is_tmp,
                '' as unit_name
	        from product_specification p1
	        left join product_specification_temp p2 on p1.vendor_inner_sn=p2.vendor_inner_sn and p1.product_inner_sn=p2.product_inner_sn 
	        	and p1.specification_inner_sn=p2.specification_inner_sn
                and p2.data_source=#{data_source} and p2.operation_organization=#{operation_organization}
                and p2.operation!=1 and p2.vendor_inner_sn = #{vendor_inner_sn} and p2.product_inner_sn = #{product_inner_sn}
	        where 1=1
	        	and p1.vendor_inner_sn = #{vendor_inner_sn} and p1.product_inner_sn = #{product_inner_sn}
		) p
    </sql>
    
	<select id="selectTmpProductSpecList" parameterType="map" resultMap="TmpSpecResult">
		<include refid="selectTmpSpec"/>
		where p.vendor_inner_sn = #{vendor_inner_sn} and p.product_inner_sn = #{product_inner_sn}
	</select>
	
	<select id="selectTmpProductSpecList1" parameterType="map" resultMap="TmpSpecResult">
		select data_source, operation_organization, vendor_inner_sn, product_inner_sn, specification_inner_sn, status, specification, specification_vendor_sn, 
		        operation, audit_level, operation_time, audit_description, is_tmp, unit_name
		from (
            select
            	data_source, operation_organization, operation, audit_level, operation_time, audit_description,
            	vendor_inner_sn, product_inner_sn, specification_inner_sn, status, specification, specification_vendor_sn, 
		        1 as is_tmp, unit_name
            from product_specification_temp
            where operation = 1 and data_source=#{data_source} and operation_organization=#{operation_organization}
            	and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} 
		) p
		where data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
			<if test="specification_inner_sn != null">and specification_inner_sn = #{specification_inner_sn}</if>
	</select>
	
	<select id="selectTmpProductSpecInfo" parameterType="map" resultMap="TmpSpecResult">
		<!-- <include refid="selectTmpSpec"/> -->
		select data_source, operation_organization, vendor_inner_sn, product_inner_sn, specification_inner_sn, status, specification, specification_vendor_sn, 
		        operation, audit_level, operation_time, 1 as is_tmp, unit_name, audit_description
		from product_specification_temp p
		where 1=1
			and p.data_source=#{data_source} and p.operation_organization=#{operation_organization}
			and p.vendor_inner_sn = #{vendor_inner_sn} and p.product_inner_sn = #{product_inner_sn}
			and p.specification_inner_sn = #{specification_inner_sn}
	</select>
	
	<select id="addOrEditTmpProductSpec" parameterType="map" statementType="CALLABLE"  useCache="false" flushCache="true" resultType="map">
         call c_operate_product_specification_temp(
         	#{data_source_i,mode=IN},
         	#{operation_organization_i,mode=IN},
            #{vendor_inner_sn_i,mode=IN},
            #{product_inner_sn_i,mode=IN},
            #{specification_inner_sn_i,mode=IN},
            #{operation_i,mode=IN},
            #{audit_level_i,mode=IN},
            #{status_i,mode=IN},
            #{specification_i,mode=IN},
            #{specification_vendor_sn_i,mode=IN},
            #{unit_name_i,mode=IN},
            #{specification_inner_sn_o ,mode=OUT,jdbcType=NUMERIC},
            #{result_o ,mode=OUT,jdbcType=NUMERIC},
			#{error_code_o ,mode=OUT,jdbcType=NUMERIC},
			#{sql_state_o ,mode=OUT,jdbcType=VARCHAR},
			#{message_string_o ,mode=OUT,jdbcType=VARCHAR}
         )  
	</select>
	
	<update id="updateTmpProductSpecStatus" parameterType="map">
		update product_specification_temp
		<set>
			<if test="status != null">status = #{status},</if>
			<if test="description != null">audit_description = #{description},</if>
			<if test="operation_time != null">operation_time = #{operation_time},</if>
		</set>
		where 1=1
			and data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} 
			<if test="specification_inner_sn != null">and specification_inner_sn = #{specification_inner_sn}</if>
	</update>
	
	<delete id="deleteTmpProductSpec" parameterType="map">
	  delete from product_specification_temp 
	  where data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} 
			<if test="specification_inner_sn != null">and specification_inner_sn = #{specification_inner_sn}</if>
	</delete>
	
	<!-- 产品医疗器械注册登记表 -->
	<resultMap type="TmpProductMDRF" id="TmpMDRFResult">
		<result property="vendor_inner_sn" column="vendor_inner_sn"/><!-- 厂商内部编号 -->
		<result property="vendor_name" column="vendor_name"/><!-- 厂商内部编号 -->
		<result property="vendor_address" column="vendor_address"/><!-- 厂商内部编号 -->
		<result property="product_inner_sn" column="product_inner_sn"/><!-- 产品内部编号 -->
		<result property="product_name" column="product_name"/><!-- 产品内部编号 -->
		<result property="mdrf_inner_sn" column="mdrf_inner_sn"/><!-- 登记表内部编号 -->
		<result property="issue_date" column="issue_date"/><!-- 颁发日期  -->
		<result property="begin_date" column="begin_date"/><!-- 颁发日期  -->
		<result property="end_date" column="end_date"/><!-- 颁发日期  -->
		<result property="register_sn" column="register_sn"/><!-- 注册号 -->
		<result property="issue_organization" column="issue_organization"/><!-- 发证部门 -->
		<result property="standard" column="standard"/><!-- 标准  -->
		<result property="production_address" column="production_address"/><!-- 生产地址  -->
		<result property="performance_structure" column="performance_structure"/><!-- 性能结构及组成  -->
		<result property="application_range" column="application_range"/><!-- 适用范围  -->
		<result property="contraindication" column="contraindication"/><!-- 禁忌症  -->
		<result property="description" column="description"/><!-- 描述*  -->
		<result property="specifications" column="specifications"/><!-- 型号规格(总览)  -->
		<result property="status" column="status"/><!-- 状态 -->
		<result property="audit_description" column="audit_description"/><!-- 审核描述 -->
		<result property="operation_organization" column="operation_organization"/><!-- 操作机构 -->
		<result property="audit_level" column="audit_level"/><!-- 审核级别 0-一级 1-二级 2-三级 3-四级 -->
		<result property="operation" column="operation"/><!-- 操作 0-删除 1-新增 2-修改 -->
		<result property="operation_time" column="operation_time"/><!-- 操作时间 -->
		<result property="source" column="data_source"/><!-- 数据来源 -->
		<result property="is_tmp" column="is_tmp"/><!-- 是否待审核 0-不是 1-是 -->
	</resultMap>
	
	<sql id="selectTmpMDRF">
        select distinct p.vendor_inner_sn, v.name as vendor_name, p.product_inner_sn, p.product_name, p.mdrf_inner_sn, p.issue_date, p.begin_date, p.end_date, p.register_sn, 
	        p.issue_organization, p.standard, production_address, p.performance_structure, p.application_range, p.contraindication, p.description, p.specifications, 
	        p.operation_organization, p.operation, p.audit_level, p.operation_time, p.audit_description, p.data_source, p.status, p.is_tmp
		from (
	        select m.vendor_inner_sn, m.product_inner_sn, p.name as product_name, m.mdrf_inner_sn, m.issue_date, m.begin_date, m.end_date, m.register_sn, 
                m.issue_organization, m.standard, m.production_address, m.performance_structure, m.application_range, m.contraindication, m.description, m.specifications, 
                m.operation_organization, m.operation, m.audit_level, m.operation_time, m.audit_description, m.data_source, m.status, 1 as is_tmp
	        from product_mdrf_temp m
	        left join product_temp p using(vendor_inner_sn,product_inner_sn)
	        where m.operation = 1 and m.data_source=#{data_source} and m.operation_organization=#{operation_organization}
	        	and m.vendor_inner_sn = #{vendor_inner_sn} and m.product_inner_sn = #{product_inner_sn}
	        union all
	        select 
                ifnull(p2.vendor_inner_sn, p1.vendor_inner_sn) as vendor_inner_sn,
                ifnull(p2.product_inner_sn, p1.product_inner_sn) as product_inner_sn,
                (
	                ifnull((select name from product_temp where vendor_inner_sn=#{vendor_inner_sn} and product_inner_sn=#{vendor_inner_sn} and data_source=#{data_source} and operation_organization=#{operation_organization}),
	                (select name from product where vendor_inner_sn=#{vendor_inner_sn} and product_inner_sn=#{product_inner_sn}))
        		) as product_name,
                ifnull(p2.mdrf_inner_sn, p1.mdrf_inner_sn) as mdrf_inner_sn,
                ifnull(p2.issue_date, p1.issue_date) as issue_date,
                ifnull(p2.begin_date, p1.begin_date) as begin_date,
                ifnull(p2.end_date, p1.end_date) as end_date,
                ifnull(p2.register_sn, p1.register_sn) as register_sn,
                ifnull(p2.issue_organization, p1.issue_organization) as issue_organization,
                ifnull(p2.standard, p1.standard) as standard,
                ifnull(p2.production_address, p1.production_address) as production_address,
                ifnull(p2.performance_structure, p1.performance_structure) as performance_structure,
                ifnull(p2.application_range, p1.application_range) as application_range,
                ifnull(p2.contraindication, p1.contraindication) as contraindication,
                ifnull(p2.description, p1.description) as description,
                ifnull(p2.specifications, p1.specifications) as specifications,
                p2.operation_organization,
                p2.operation,
                p2.audit_level,
                p2.operation_time,
                p2.audit_description,
                p2.data_source,
                p2.status,
                CASE WHEN ISNULL(p2.product_inner_sn) THEN 0 ELSE 1 END as is_tmp
	        from product_mdrf p1
	        left join product_mdrf_temp p2 on p1.vendor_inner_sn=p2.vendor_inner_sn and p1.product_inner_sn=p2.product_inner_sn and P1.mdrf_inner_sn=p2.mdrf_inner_sn
                and p2.data_source=#{data_source} and p2.operation_organization=#{operation_organization}
                and p2.operation!=1 and p2.vendor_inner_sn = #{vendor_inner_sn} and p2.product_inner_sn = #{product_inner_sn}
	        where 1=1 and p1.is_delete=0
	        	and p1.vendor_inner_sn = #{vendor_inner_sn} and p1.product_inner_sn = #{product_inner_sn}
	        ) p
		left join vendor v on v.vendor_inner_sn = p.vendor_inner_sn
    </sql>
    
    <select id="selectTmpProductMDRFInfo" parameterType="map" resultMap="TmpMDRFResult">
		select m.vendor_inner_sn, v.name as vendor_name, m.product_inner_sn, ifnull(p1.name, p.name) AS product_name, m.mdrf_inner_sn, m.issue_date, m.begin_date, m.end_date, m.register_sn, 
                m.issue_organization, m.standard, m.production_address, m.performance_structure, m.application_range, m.contraindication, m.description, m.specifications, 
                m.operation_organization, m.operation, m.audit_level, m.operation_time, m.audit_description, m.data_source, m.status, 1 as is_tmp
        from product_mdrf_temp m
        left join product_temp p using(data_source, operation_organization, vendor_inner_sn,product_inner_sn)
        LEFT JOIN product p1 USING (vendor_inner_sn,product_inner_sn)
        left join vendor v using(vendor_inner_sn)
		where 1=1
			and m.data_source=#{data_source} and m.operation_organization=#{operation_organization}
			and m.vendor_inner_sn = #{vendor_inner_sn} and m.product_inner_sn = #{product_inner_sn} and m.mdrf_inner_sn = #{mdrf_inner_sn}
	</select>
	
	<select id="searchTmpProductMDRFList" parameterType="map" resultMap="TmpMDRFResult">
		<include refid="selectTmpMDRF"/>
		where 1=1
		and p.vendor_inner_sn = #{vendor_inner_sn} and p.product_inner_sn = #{product_inner_sn}
		<!-- <if test="begin_date != null">AND date_format(p.begin_date,'%y%m%d') &gt;= date_format(#{begin_date},'%y%m%d')</if>
		<if test="end_date != null">AND date_format(p.end_date,'%y%m%d') &lt;= date_format(#{end_date},'%y%m%d')</if>
		<if test="register_sn != null and register_sn != ''">and p.register_sn like concat('%', #{register_sn}, '%')</if> -->
	</select>
	
	<select id="addOrEditTmpProductMDRF" parameterType="map" statementType="CALLABLE"  useCache="false" flushCache="true" resultType="map">
	   	call c_operate_product_mdrf_temp(
	   		#{data_source_i,mode=IN},
	   		#{operation_organization_i,mode=IN},
            #{vendor_inner_sn_i,mode=IN},
            #{product_inner_sn_i,mode=IN},
            #{mdrf_inner_sn_i,mode=IN},
            #{operation_i,mode=IN},
            #{audit_level_i,mode=IN},
            #{status_i,mode=IN},
            #{issue_date_i,mode=IN},
            #{begin_date_i,mode=IN},
            #{end_date_i,mode=IN},
            #{register_sn_i,mode=IN},
            #{issue_organization_i,mode=IN},
            #{standard_i,mode=IN},
            #{production_address_i,mode=IN},
            #{performance_structure_i,mode=IN},
            #{application_range_i,mode=IN},
            #{contraindication_i,mode=IN},
            #{description_i,mode=IN},
            #{specifications_i,mode=IN},
            #{data_i,mode=IN},
            #{mdrf_inner_sn_o ,mode=OUT,jdbcType=NUMERIC},
            #{result_o ,mode=OUT,jdbcType=NUMERIC},
			#{error_code_o ,mode=OUT,jdbcType=NUMERIC},
			#{sql_state_o ,mode=OUT,jdbcType=VARCHAR},
			#{message_string_o ,mode=OUT,jdbcType=VARCHAR}
       	)
	</select>
	
	<update id="updateTmpProductMDRFStatus" parameterType="map">
		update product_mdrf_temp
		<set>
			<if test="status != null">status = #{status},</if>
			<if test="description != null">audit_description = #{description},</if>
			<if test="operation_time != null">operation_time = #{operation_time},</if>
		</set>
		where 1=1
			and data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} 
			<if test="mdrf_inner_sn != null">and mdrf_inner_sn = #{mdrf_inner_sn}</if>
	</update>
	
	<delete id="deleteTmpProductMDRF" parameterType="map">
	  delete from product_mdrf_temp 
	  where data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} 
			<if test="mdrf_inner_sn != null">and mdrf_inner_sn = #{mdrf_inner_sn}</if>
	</delete>
	
	<!-- 产品注册证登记表图片 -->
	<resultMap type="TmpProductMDRFImage" id="MDRFImageResult">
		<result property="vendor_inner_sn" column="vendor_inner_sn"/><!-- 厂商内部编号 -->
		<result property="product_inner_sn" column="product_inner_sn"/><!-- 产品内部编号 -->
		<result property="mdrf_inner_sn" column="mdrf_inner_sn"/><!-- 登记表内部编号 -->
		<result property="image_inner_sn" column="image_inner_sn"/><!-- 图片内部编号  -->
		<result property="url" column="url"/><!-- 统一资源定位符  -->
		<result property="file_name" column="file_name"/><!-- 统一资源定位符  -->
		<result property="operation_organization" column="operation_organization"/><!-- 操作机构 -->
		<result property="source" column="data_source"/><!-- 数据来源 -->
	</resultMap>
	
	<sql id="selectTmpMDRFImage">
        select vendor_inner_sn, product_inner_sn, mdrf_inner_sn, image_inner_sn, url, file_name, data_source, operation_organization
		from product_mdrf_image_temp
    </sql>
    
    <select id="selectTmpMDRFImageInfo" parameterType="ProductMDRFImage" resultMap="MDRFImageResult">
		select vendor_inner_sn, product_inner_sn, mdrf_inner_sn, image_inner_sn, url, file_name, data_source, operation_organization
		from product_mdrf_image_temp
		where 1=1
			and data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
			and mdrf_inner_sn= #{mdrf_inner_sn} and image_inner_sn = #{image_inner_sn}
	</select>
	
	<select id="selectTmpMDRFImageList" parameterType="map" resultMap="MDRFImageResult">
		<include refid="selectTmpMDRFImage"/>
		where 1=1
			and data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
			and mdrf_inner_sn= #{mdrf_inner_sn}
			<if test="image_inner_sn != null">and image_inner_sn = #{image_inner_sn}</if>
	</select>
	
	<delete id="deleteTmpMDRFImage" parameterType="map">
		delete from product_mdrf_image_temp
		where 1=1
			and data_source = #{data_source} and operation_organization = #{operation_organization} 
			and vendor_inner_sn= #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
			<if test="mdrf_inner_sn != null">and mdrf_inner_sn= #{mdrf_inner_sn}</if>
			<if test="image_inner_sn != null">and image_inner_sn = #{image_inner_sn}</if>
	</delete>
	
	<!-- 审核送审的产品信息 -->
	<select id="searchPendingAuditProductList" parameterType="map" resultMap="TmpProductResult">
		select p.vendor_inner_sn, v.name as vendor_name, p.product_inner_sn, p.type_inner_sn, pt.type as type_name, 
	        p.code68_sn, c.name as code68_name, p.data_source, p.status, p.storage_condition, p.health_care_type, 
	        p.name, p.product_vendor_sn, p.type, p.product_vendor_sn, p.specifications, p.description, 
	        p.operation_organization, p.audit_level, p.operation, p.operation_time, p.is_tmp, p.audit_description, p.code68_type
		from (
	        select vendor_inner_sn, product_inner_sn, type_inner_sn, code68_sn, storage_condition, health_care_type, type, status, name, 
                product_vendor_sn, description, specifications, data_source, operation_organization, audit_level, operation, 
                operation_time, audit_description, 1 as is_tmp, code68_type
	        from product_temp t
	        where t.status = 3
	        union distinct
	        select 
                ifnull(p2.vendor_inner_sn, p1.vendor_inner_sn) as vendor_inner_sn,
                ifnull(p2.product_inner_sn, p1.product_inner_sn) as product_inner_sn,
                ifnull(p2.type_inner_sn, p1.type_inner_sn) as type_inner_sn,
                ifnull(p2.code68_sn, p1.code68_sn) as code68_sn,
                ifnull(p2.storage_condition, p1.storage_condition) as storage_condition,
                ifnull(p2.health_care_type, p1.health_care_type) as health_care_type,
                ifnull(p2.type, p1.type) as type,
                ifnull(p2.status, p1.status) as status,
                ifnull(p2.name, p1.name) as name,
                ifnull(p2.product_vendor_sn, p1.product_vendor_sn) as product_vendor_sn,
                ifnull(p2.description, p1.description) as description,
                ifnull(p2.specifications, p1.specifications) as specifications,
                ifnull(p2.data_source, p1.data_source) as data_source,
                p2.operation_organization,
                p2.audit_level,
                p2.operation,
                p2.operation_time,
                p2.audit_description,
                CASE WHEN ISNULL(p2.product_inner_sn) THEN 0 ELSE 1 END as is_tmp,
                ifnull(p2.code68_type, p1.code68_type) as code68_type
	        from product_specification_temp t
	        left join product p1 using(vendor_inner_sn, product_inner_sn)
	        left join product_temp p2 on t.vendor_inner_sn=p2.vendor_inner_sn and t.product_inner_sn=p2.product_inner_sn
	        	and t.data_source=p2.data_source
		        and t.operation_organization=p2.operation_organization
		        and p2.status=3
	        where t.status = 3
	        union distinct
	        select 
                ifnull(p2.vendor_inner_sn, p1.vendor_inner_sn) as vendor_inner_sn,
                ifnull(p2.product_inner_sn, p1.product_inner_sn) as product_inner_sn,
                ifnull(p2.type_inner_sn, p1.type_inner_sn) as type_inner_sn,
                ifnull(p2.code68_sn, p1.code68_sn) as code68_sn,
                ifnull(p2.storage_condition, p1.storage_condition) as storage_condition,
                ifnull(p2.health_care_type, p1.health_care_type) as health_care_type,
                ifnull(p2.type, p1.type) as type,
                ifnull(p2.status, p1.status) as status,
                ifnull(p2.name, p1.name) as name,
                ifnull(p2.product_vendor_sn, p1.product_vendor_sn) as product_vendor_sn,
                ifnull(p2.description, p1.description) as description,
                ifnull(p2.specifications, p1.specifications) as specifications,
                ifnull(p2.data_source, p1.data_source) as data_source,
                p2.operation_organization,
                p2.audit_level,
                p2.operation,
                p2.operation_time,
                p2.audit_description,
                CASE WHEN ISNULL(p2.product_inner_sn) THEN 0 ELSE 1 END as is_tmp,
                ifnull(p2.code68_type, p1.code68_type) as code68_type
	        from product_image_temp t
	        left join product p1 using(vendor_inner_sn, product_inner_sn)
	        left join product_temp p2 on t.vendor_inner_sn=p2.vendor_inner_sn and t.product_inner_sn=p2.product_inner_sn
	        	and t.data_source=p2.data_source
		        and t.operation_organization=p2.operation_organization
		        and p2.status=3
	        where t.status = 3
	        union distinct
	        select 
                ifnull(p2.vendor_inner_sn, p1.vendor_inner_sn) as vendor_inner_sn,
                ifnull(p2.product_inner_sn, p1.product_inner_sn) as product_inner_sn,
                ifnull(p2.type_inner_sn, p1.type_inner_sn) as type_inner_sn,
                ifnull(p2.code68_sn, p1.code68_sn) as code68_sn,
                ifnull(p2.storage_condition, p1.storage_condition) as storage_condition,
                ifnull(p2.health_care_type, p1.health_care_type) as health_care_type,
                ifnull(p2.type, p1.type) as type,
                ifnull(p2.status, p1.status) as status,
                ifnull(p2.name, p1.name) as name,
                ifnull(p2.product_vendor_sn, p1.product_vendor_sn) as product_vendor_sn,
                ifnull(p2.description, p1.description) as description,
                ifnull(p2.specifications, p1.specifications) as specifications,
                ifnull(p2.data_source, p1.data_source) as data_source,
                p2.operation_organization,
                p2.audit_level,
                p2.operation,
                p2.operation_time,
                p2.audit_description,
                CASE WHEN ISNULL(p2.product_inner_sn) THEN 0 ELSE 1 END as is_tmp,
                ifnull(p2.code68_type, p1.code68_type) as code68_type
	        from product_mdrf_temp t
	        left join product p1 using(vendor_inner_sn, product_inner_sn)
	        left join product_temp p2 on t.vendor_inner_sn=p2.vendor_inner_sn and t.product_inner_sn=p2.product_inner_sn
	        	and t.data_source=p2.data_source
		        and t.operation_organization=p2.operation_organization
		        and p2.status=3
	        where t.status = 3
		) p
		left join vendor v on v.vendor_inner_sn = p.vendor_inner_sn
		left join code68 c on c.code68_sn = p.code68_sn
		left join product_type pt on pt.type_inner_sn = p.type_inner_sn
		where 1=1
		<if test="type_inner_sn != null">and p.type_inner_sn = #{type_inner_sn}</if>
		<if test="code68_sn != null">and p.code68_sn = #{code68_sn}</if>
		<if test="name != null and name != ''">and p.name like concat('%', #{name}, '%')</if>
		<if test="vendor_inner_sn != null">and p.vendor_inner_sn = #{vendor_inner_sn}</if>
	</select>
	
	<select id="selectPendingAuditProductSpecList" parameterType="map" resultMap="TmpSpecResult">
		select data_source, operation_organization, vendor_inner_sn, product_inner_sn, specification_inner_sn, status, specification, specification_vendor_sn, 
		        operation, audit_level, operation_time, audit_description, 1 as is_tmp, unit_name
		from product_specification_temp p
		where status = 3
			and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
	</select>
	
	<select id="selectPendingAuditCertImageList" parameterType="map" resultMap="ImageResult">
		select vendor_inner_sn, product_inner_sn, image_inner_sn, type, url, begin_date, end_date, status, 
	        data_source, operation_organization, operation, audit_level, operation_time, 1 as is_tmp
	    from product_image_temp
		where status = 3 and type=1
			and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
	</select>
	
	<select id="selectPendingAuditMDRFList" parameterType="map" resultMap="TmpMDRFResult">
		select p.vendor_inner_sn, p.product_inner_sn, p.mdrf_inner_sn, p.issue_date, p.begin_date, p.end_date, p.register_sn, p.status,
	        p.issue_organization, p.standard, production_address, p.performance_structure, p.application_range, p.contraindication, p.description, p.specifications, 
	        p.operation_organization, p.operation, p.audit_level, p.operation_time, p.audit_description, p.data_source, p.status, 1 as is_tmp
	    from product_mdrf_temp p
		where status = 3
			and p.vendor_inner_sn = #{vendor_inner_sn} and p.product_inner_sn = #{product_inner_sn} 
	</select>
	
	<select id="selectProductInfo" parameterType="map" resultMap="TmpProductResult">
		select p.vendor_inner_sn, v.name as vendor_name, p.product_inner_sn, p.type_inner_sn, pt.type as type_name, 
	        p.code68_sn, c.name as code68_name, p.data_source, p.status, p.storage_condition, p.health_care_type, 
	        p.name, p.product_vendor_sn, p.type, p.product_vendor_sn, p.specifications, p.description, 
	        null as peration_organization, 0 as audit_level, 2 as operation, null as operation_time, 0 as is_tmp, 
	        '' as audit_description, code68_type
		from product p 
		left join vendor v on v.vendor_inner_sn = p.vendor_inner_sn
		left join code68 c on c.code68_sn = p.code68_sn
		left join product_type pt on pt.type_inner_sn = p.type_inner_sn
		where p.is_delete = 0 and p.status = 1 
			and p.product_inner_sn = #{product_inner_sn} and p.vendor_inner_sn = #{vendor_inner_sn}
	</select>
	
	<select id="selectProductSpecInfo" parameterType="map" resultMap="TmpSpecResult">
		select 0 as data_source, null as operation_organization, vendor_inner_sn, product_inner_sn, specification_inner_sn, status, specification, specification_vendor_sn, 
		       2 as operation, 0 as audit_level, null as operation_time, '' as audit_description, 0 as is_tmp, '' as unit_name
		from product_specification
		where 1=1
		and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} and specification_inner_sn = #{specification_inner_sn}
	</select>
	
	<select id="selectProductMDRFInfo" parameterType="map" resultMap="TmpMDRFResult">
		select p.vendor_inner_sn, v.name as vendor_name, p.product_inner_sn, p1.name as product_name, p.mdrf_inner_sn, p.issue_date, p.begin_date, p.end_date, p.register_sn, 
	        p.issue_organization, p.standard, production_address, p.performance_structure, p.application_range, p.contraindication, p.description, p.specifications,
	        0 as data_source, null as operation_organization, 2 as operation, 0 as audit_level, null as operation_time, '' as audit_description, 0 as is_tmp 
		from product_mdrf p
		left join vendor v using(vendor_inner_sn)
		left join product p1 using(vendor_inner_sn,product_inner_sn)
		where 1=1 and p.is_delete = 0
		and p.vendor_inner_sn = #{vendor_inner_sn} and p.product_inner_sn = #{product_inner_sn} and p.mdrf_inner_sn = #{mdrf_inner_sn}
	</select>
	
	<select id="selectMDRFImageList" parameterType="map" resultMap="MDRFImageResult">
		select vendor_inner_sn, product_inner_sn, mdrf_inner_sn, image_inner_sn, url, file_name, 0 as data_source, null as operation_organization
		from product_mdrf_image
		where 1=1
		and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn} and mdrf_inner_sn = #{mdrf_inner_sn}
		<if test=" image_inner_sn !=null"> and image_inner_sn = #{image_inner_sn}</if>
	</select>
</mapper>