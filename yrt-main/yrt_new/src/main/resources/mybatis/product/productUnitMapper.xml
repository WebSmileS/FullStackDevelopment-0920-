<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yrt.project.modular.product.mapper.ProductUnitMapper">

	<resultMap type="ProductUnit" id="ProductUnitResult">
		<id      property="vendor_inner_sn" column="vendor_inner_sn"/><!-- 厂商内部编号 -->
		<result  property="product_inner_sn" column="product_inner_sn"/><!-- 产品内部编号 -->
		<!-- <result  property="product_name" column="product_name"/> --><!-- 产品名称 -->
		<result  property="specification_inner_sn" column="specification_inner_sn"/><!-- 型号规格内部编号 -->
		<!-- <result  property="specification" column="specification"/> --><!-- 型号规格 -->
		<result property="unit_inner_sn" column="unit_inner_sn"/><!-- 单位内部编号 -->
		<result property="parent_unit_inner_sn" column="parent_unit_inner_sn"/><!-- 上级(小)单位内部编号  -->
		<result property="name" column="name"/><!-- 名称*  -->
		<result property="measure" column="measure"/><!-- 最小计量/倍数  -->
		<result property="is_common_use" column="is_common_use"/><!-- 是否常用  -->
	</resultMap>
	
	<sql id="selectProductUnit">
		select pu.vendor_inner_sn, pu.product_inner_sn, pu.specification_inner_sn, pu.unit_inner_sn,
			pu.parent_unit_inner_sn, pu.name, pu.measure, pu.is_common_use
		from product_unit pu
		left join vendor v using(vendor_inner_sn)
		left join product p using(vendor_inner_sn, product_inner_sn)
		left join product_specification ps using(vendor_inner_sn, product_inner_sn, specification_inner_sn)
	</sql>
	
	<select id="selectProductUnitInfo" parameterType="ProductUnit" resultMap="ProductUnitResult">
		select pu.vendor_inner_sn, pu.product_inner_sn, pu.specification_inner_sn, pu.unit_inner_sn,
			pu.parent_unit_inner_sn, pu.name, pu.measure, pu.is_common_use
		from product_unit pu
		where 1=1
			and pu.product_inner_sn = #{product_inner_sn} and pu.vendor_inner_sn = #{vendor_inner_sn} 
			and pu.specification_inner_sn = #{specification_inner_sn} and pu.unit_inner_sn = #{unit_inner_sn}
	</select>
	
	<select id="selectProductUnitList" parameterType="ProductUnit" resultMap="ProductUnitResult">
		<include refid="selectProductUnit"/>
		where 1 = 1
			and parent_unit_inner_sn is null
			and pu.vendor_inner_sn = #{vendor_inner_sn} and pu.product_inner_sn = #{product_inner_sn} 
			and pu.specification_inner_sn = #{specification_inner_sn}
	</select>
	
	<select id="selectProductUnitListByPid" parameterType="ProductUnit" resultMap="ProductUnitResult">
		<include refid="selectProductUnit"/>
		where 1 = 1
			and pu.product_inner_sn = #{product_inner_sn} and pu.vendor_inner_sn = #{vendor_inner_sn} 
			and pu.specification_inner_sn = #{specification_inner_sn} and parent_unit_inner_sn = #{parent_unit_inner_sn}
	</select>
	
	<select id="p_add_product_unit" parameterType="map" statementType="CALLABLE"  useCache="false" flushCache="true" resultType="map">
         call p_add_product_unit(
            #{vendor_inner_sn_i,mode=IN},
            #{product_inner_sn_i,mode=IN},
            #{specification_inner_sn_i,mode=IN},
            #{parent_unit_inner_sn_i,mode=IN},
            #{name_i,mode=IN},
            #{measure_i,mode=IN},
            #{is_common_use_i,mode=IN},
            #{unit_inner_sn_o ,mode=OUT,jdbcType=NUMERIC},
            #{result_o ,mode=OUT,jdbcType=NUMERIC},
			#{error_code_o ,mode=OUT,jdbcType=NUMERIC},
			#{sql_state_o ,mode=OUT,jdbcType=VARCHAR},
			#{message_string_o ,mode=OUT,jdbcType=VARCHAR}
         )  
	</select>
	
	<update id="updateProductUnit" parameterType="ProductUnit">
		update product_unit
		<set>
			<if test="name != null and name != ''">name = #{name},</if>
			<if test="measure != null and measure != ''">measure = #{measure},</if>
			<if test="is_common_use != null">is_common_use = #{is_common_use},</if>
		</set>
		where 1 = 1
			and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
			and specification_inner_sn = #{specification_inner_sn} and unit_inner_sn = #{unit_inner_sn}
	</update>
	
	<update id="cleanCommonUse" parameterType="ProductUnit">
		update product_unit set is_common_use = 0
		where 1 = 1
			and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
			and specification_inner_sn = #{specification_inner_sn}
	</update>
	
	<update id="deleteProductUnit" parameterType="ProductUnit">
		update product_unit set is_delete = 1
		where 1 = 1
			and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
			and specification_inner_sn = #{specification_inner_sn} and unit_inner_sn = #{unit_inner_sn}
	</update>
	
	<delete id="trueDeleteProductUnit" parameterType="map">
		delete from product_unit
		where 1 = 1
			and vendor_inner_sn = #{vendor_inner_sn} and product_inner_sn = #{product_inner_sn}
			<if test="specification_inner_sn != null">and specification_inner_sn = #{specification_inner_sn}</if>
			<if test="unit_inner_sn != null">and unit_inner_sn = #{unit_inner_sn}</if>
	</delete>
	
	<!-- 换算产品最小单位 -->
	<select id="calculate_product_min_unit" parameterType="map" resultType="BigDecimal">
		select c_calculate_product_min_unit(#{vendor_inner_sn_i},#{product_inner_sn_i},#{specification_inner_sn_i},#{unit_inner_sn_i})
	</select>
	
	<select id="c_get_product_min_unit_inner_sn" parameterType="map" resultType="long">
		select c_get_product_min_unit_inner_sn(#{vendor_inner_sn_i},#{product_inner_sn_i},#{specification_inner_sn_i},#{unit_inner_sn_i})
	</select>
	
	<select id="c_get_product_min_unit" parameterType="map" resultType="string">
		select c_get_product_min_unit(#{vendor_inner_sn_i},#{product_inner_sn_i},#{specification_inner_sn_i},#{unit_inner_sn_i})
	</select>
	
	<select id="existProductUnit" parameterType="map" resultType="long">
		select unit_inner_sn
		from product_unit
		where 1=1
			and vendor_inner_sn = #{vendor_inner_sn} and  product_inner_sn = #{product_inner_sn}
			and specification_inner_sn = #{specification_inner_sn} and name = #{unit}
		limit 1
	</select>
</mapper>