<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yrt.project.modular.surgery.plan.mapper.OrthopaedicOperationPlanKitProductDetailMapper">
  <resultMap id="BaseResultMap" type="com.yrt.project.modular.surgery.plan.OrthopaedicOperationPlanKitProductDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="kit_ins_id" jdbcType="BIGINT" property="kit_ins_id" />
    <result column="plan_id" jdbcType="BIGINT" property="plan_id" />
    <result column="product_vendor_inner_sn" jdbcType="INTEGER" property="product_vendor_inner_sn" />
    <result column="product_inner_sn" jdbcType="INTEGER" property="product_inner_sn" />
    <result column="specification_inner_sn" jdbcType="SMALLINT" property="specification_inner_sn" />
    <result column="unit_inner_sn" jdbcType="SMALLINT" property="unit_inner_sn" />
    <result column="quantity" jdbcType="BIGINT" property="quantity" />
    <result column="unit_price" jdbcType="BIGINT" property="unit_price" />
    <result column="sort_number" jdbcType="SMALLINT" property="sort_number" />
    <result column="product_vendor_name" jdbcType="VARCHAR" property="product_vendor_name" />
    <result column="product_name" jdbcType="VARCHAR" property="product_name" />
    <result column="specification" jdbcType="VARCHAR" property="specification" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="batch_number" jdbcType="VARCHAR" property="batch_number" />
    <result column="produce_date" jdbcType="DATE" property="produce_date" />
    <result column="overdue_date" jdbcType="DATE" property="overdue_date" />
    <result column="back_quantity" jdbcType="BIGINT" property="back_quantity" />
    <result column="sale_quantity" jdbcType="BIGINT" property="sale_quantity" />
    <result column="loss_quantity" jdbcType="BIGINT" property="loss_quantity" />
    <result column="loss_reason" jdbcType="VARCHAR" property="loss_reason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, kit_ins_id, plan_id, product_vendor_inner_sn, product_inner_sn, specification_inner_sn, 
    unit_inner_sn, 
    quantity/1000 as quantity, unit_price/10000 as unit_price, sort_number, product_vendor_name, product_name, 
    specification, unit, batch_number, produce_date, overdue_date, 
    back_quantity/1000 as back_quantity, sale_quantity/1000 as sale_quantity, loss_quantity/1000 as loss_quantity, loss_reason
  </sql>
  <select id="selectByExample" parameterType="com.yrt.project.modular.surgery.plan.OrthopaedicOperationPlanKitProductDetailExample" resultMap="BaseResultMap">
    with pd as (
      select 
          d.*, 
          s.specification_vendor_sn
      from orthopaedic_operation_plan_kit_product_detail d
      left join product_specification s on 
            s.vendor_inner_sn = d.product_vendor_inner_sn
            and s.product_inner_sn = d.product_inner_sn
            and s.specification_inner_sn = d.specification_inner_sn
    )
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />, specification_vendor_sn
    from pd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orthopaedic_operation_plan_kit_product_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from orthopaedic_operation_plan_kit_product_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yrt.project.modular.surgery.plan.OrthopaedicOperationPlanKitProductDetailExample">
    delete from orthopaedic_operation_plan_kit_product_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yrt.project.modular.surgery.plan.OrthopaedicOperationPlanKitProductDetail">
    insert into orthopaedic_operation_plan_kit_product_detail (id, kit_ins_id, plan_id, 
      product_vendor_inner_sn, product_inner_sn, 
      specification_inner_sn, unit_inner_sn, 
      quantity, unit_price, sort_number, 
      product_vendor_name, product_name, specification, 
      unit, batch_number, produce_date, overdue_date, 
      back_quantity, sale_quantity, 
      loss_quantity, loss_reason)
    values (#{id,jdbcType=BIGINT}, #{kit_ins_id,jdbcType=BIGINT}, #{plan_id,jdbcType=BIGINT}, 
      #{product_vendor_inner_sn,jdbcType=INTEGER}, #{product_inner_sn,jdbcType=INTEGER}, 
      #{specification_inner_sn,jdbcType=SMALLINT}, #{unit_inner_sn,jdbcType=SMALLINT}, 
      #{quantity,jdbcType=BIGINT} *1000, #{unit_price,jdbcType=BIGINT} *10000, #{sort_number,jdbcType=SMALLINT}, 
      #{product_vendor_name,jdbcType=VARCHAR}, #{product_name,jdbcType=VARCHAR}, #{specification,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, 
      #{batch_number,jdbcType=VARCHAR}, #{produce_date,jdbcType=DATE}, #{overdue_date,jdbcType=DATE},
      #{back_quantity,jdbcType=BIGINT} *1000, #{sale_quantity,jdbcType=BIGINT} *1000, 
      #{loss_quantity,jdbcType=BIGINT} *1000, #{loss_reason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yrt.project.modular.surgery.plan.OrthopaedicOperationPlanKitProductDetail">
    insert into orthopaedic_operation_plan_kit_product_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="kit_ins_id != null">
        kit_ins_id,
      </if>
      <if test="plan_id != null">
        plan_id,
      </if>
      <if test="product_vendor_inner_sn != null">
        product_vendor_inner_sn,
      </if>
      <if test="product_inner_sn != null">
        product_inner_sn,
      </if>
      <if test="specification_inner_sn != null">
        specification_inner_sn,
      </if>
      <if test="unit_inner_sn != null">
        unit_inner_sn,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="unit_price != null">
        unit_price,
      </if>
      <if test="sort_number != null">
        sort_number,
      </if>
      <if test="product_vendor_name != null">
        product_vendor_name,
      </if>
      <if test="product_name != null">
        product_name,
      </if>
      <if test="specification != null">
        specification,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="batch_number != null">
        batch_number,
      </if>
      <if test="produce_date != null">
        produce_date,
      </if>
      <if test="overdue_date != null">
        overdue_date,
      </if>
      <if test="back_quantity != null">
        back_quantity,
      </if>
      <if test="sale_quantity != null">
        sale_quantity,
      </if>
      <if test="loss_quantity != null">
        loss_quantity,
      </if>
      <if test="loss_reason != null">
        loss_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="kit_ins_id != null">
        #{kit_ins_id,jdbcType=BIGINT},
      </if>
      <if test="plan_id != null">
        #{plan_id,jdbcType=BIGINT},
      </if>
      <if test="product_vendor_inner_sn != null">
        #{product_vendor_inner_sn,jdbcType=INTEGER},
      </if>
      <if test="product_inner_sn != null">
        #{product_inner_sn,jdbcType=INTEGER},
      </if>
      <if test="specification_inner_sn != null">
        #{specification_inner_sn,jdbcType=SMALLINT},
      </if>
      <if test="unit_inner_sn != null">
        #{unit_inner_sn,jdbcType=SMALLINT},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="unit_price != null">
        #{unit_price,jdbcType=BIGINT} *10000,
      </if>
      <if test="sort_number != null">
        #{sort_number,jdbcType=SMALLINT},
      </if>
      <if test="product_vendor_name != null">
        #{product_vendor_name,jdbcType=VARCHAR},
      </if>
      <if test="product_name != null">
        #{product_name,jdbcType=VARCHAR},
      </if>
      <if test="specification != null">
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="batch_number != null">
        #{batch_number,jdbcType=VARCHAR},
      </if>
      <if test="produce_date != null">
        #{produce_date,jdbcType=DATE},
      </if>
      <if test="overdue_date != null">
        #{overdue_date,jdbcType=DATE},
      </if>
      <if test="back_quantity != null">
        #{back_quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="sale_quantity != null">
        #{sale_quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="loss_quantity != null">
        #{loss_quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="loss_reason != null">
        #{loss_reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yrt.project.modular.surgery.plan.OrthopaedicOperationPlanKitProductDetailExample" resultType="java.lang.Long">
    select count(*) from orthopaedic_operation_plan_kit_product_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orthopaedic_operation_plan_kit_product_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.kit_ins_id != null">
        kit_ins_id = #{record.kit_ins_id,jdbcType=BIGINT},
      </if>
      <if test="record.plan_id != null">
        plan_id = #{record.plan_id,jdbcType=BIGINT},
      </if>
      <if test="record.product_vendor_inner_sn != null">
        product_vendor_inner_sn = #{record.product_vendor_inner_sn,jdbcType=INTEGER},
      </if>
      <if test="record.product_inner_sn != null">
        product_inner_sn = #{record.product_inner_sn,jdbcType=INTEGER},
      </if>
      <if test="record.specification_inner_sn != null">
        specification_inner_sn = #{record.specification_inner_sn,jdbcType=SMALLINT},
      </if>
      <if test="record.unit_inner_sn != null">
        unit_inner_sn = #{record.unit_inner_sn,jdbcType=SMALLINT},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="record.unit_price != null">
        unit_price = #{record.unit_price,jdbcType=BIGINT} *10000,
      </if>
      <if test="record.sort_number != null">
        sort_number = #{record.sort_number,jdbcType=SMALLINT},
      </if>
      <if test="record.product_vendor_name != null">
        product_vendor_name = #{record.product_vendor_name,jdbcType=VARCHAR},
      </if>
      <if test="record.product_name != null">
        product_name = #{record.product_name,jdbcType=VARCHAR},
      </if>
      <if test="record.specification != null">
        specification = #{record.specification,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.batch_number != null">
        batch_number = #{record.batch_number,jdbcType=VARCHAR},
      </if>
      <if test="record.produce_date != null">
        produce_date = #{record.produce_date,jdbcType=DATE},
      </if>
      <if test="record.produce_date == null">
        produce_date = null,
      </if>
      <if test="record.overdue_date != null">
        overdue_date = #{record.overdue_date,jdbcType=DATE},
      </if>
      <if test="record.back_quantity != null">
        back_quantity = #{record.back_quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="record.sale_quantity != null">
        sale_quantity = #{record.sale_quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="record.loss_quantity != null">
        loss_quantity = #{record.loss_quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="record.loss_reason != null">
        loss_reason = #{record.loss_reason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orthopaedic_operation_plan_kit_product_detail
    set id = #{record.id,jdbcType=BIGINT},
      kit_ins_id = #{record.kit_ins_id,jdbcType=BIGINT},
      plan_id = #{record.plan_id,jdbcType=BIGINT},
      product_vendor_inner_sn = #{record.product_vendor_inner_sn,jdbcType=INTEGER},
      product_inner_sn = #{record.product_inner_sn,jdbcType=INTEGER},
      specification_inner_sn = #{record.specification_inner_sn,jdbcType=SMALLINT},
      unit_inner_sn = #{record.unit_inner_sn,jdbcType=SMALLINT},
      quantity = #{record.quantity,jdbcType=BIGINT} *1000,
      unit_price = #{record.unit_price,jdbcType=BIGINT} *10000,
      sort_number = #{record.sort_number,jdbcType=SMALLINT},
      product_vendor_name = #{record.product_vendor_name,jdbcType=VARCHAR},
      product_name = #{record.product_name,jdbcType=VARCHAR},
      specification = #{record.specification,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      batch_number = #{record.batch_number,jdbcType=VARCHAR},
      produce_date = #{record.produce_date,jdbcType=VARCHAR},
      overdue_date = #{record.overdue_date,jdbcType=VARCHAR},
      back_quantity = #{record.back_quantity,jdbcType=BIGINT} *1000,
      sale_quantity = #{record.sale_quantity,jdbcType=BIGINT} *1000,
      loss_quantity = #{record.loss_quantity,jdbcType=BIGINT} *1000,
      loss_reason = #{record.loss_reason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yrt.project.modular.surgery.plan.OrthopaedicOperationPlanKitProductDetail">
    update orthopaedic_operation_plan_kit_product_detail
    <set>
      <if test="kit_ins_id != null">
        kit_ins_id = #{kit_ins_id,jdbcType=BIGINT},
      </if>
      <if test="plan_id != null">
        plan_id = #{plan_id,jdbcType=BIGINT},
      </if>
      <if test="product_vendor_inner_sn != null">
        product_vendor_inner_sn = #{product_vendor_inner_sn,jdbcType=INTEGER},
      </if>
      <if test="product_inner_sn != null">
        product_inner_sn = #{product_inner_sn,jdbcType=INTEGER},
      </if>
      <if test="specification_inner_sn != null">
        specification_inner_sn = #{specification_inner_sn,jdbcType=SMALLINT},
      </if>
      <if test="unit_inner_sn != null">
        unit_inner_sn = #{unit_inner_sn,jdbcType=SMALLINT},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="unit_price != null">
        unit_price = #{unit_price,jdbcType=BIGINT} *10000,
      </if>
      <if test="sort_number != null">
        sort_number = #{sort_number,jdbcType=SMALLINT},
      </if>
      <if test="product_vendor_name != null">
        product_vendor_name = #{product_vendor_name,jdbcType=VARCHAR},
      </if>
      <if test="product_name != null">
        product_name = #{product_name,jdbcType=VARCHAR},
      </if>
      <if test="specification != null">
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="batch_number != null">
        batch_number = #{batch_number,jdbcType=VARCHAR},
      </if>
      <if test="produce_date != null">
        produce_date = #{produce_date,jdbcType=DATE},
      </if>
      <if test="produce_date == null">
        produce_date = null,
      </if>
      <if test="overdue_date != null">
        overdue_date = #{overdue_date,jdbcType=DATE},
      </if>
      <if test="back_quantity != null">
        back_quantity = #{back_quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="sale_quantity != null">
        sale_quantity = #{sale_quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="loss_quantity != null">
        loss_quantity = #{loss_quantity,jdbcType=BIGINT} *1000,
      </if>
      <if test="loss_reason != null">
        loss_reason = #{loss_reason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yrt.project.modular.surgery.plan.OrthopaedicOperationPlanKitProductDetail">
    update orthopaedic_operation_plan_kit_product_detail
    set kit_ins_id = #{kit_ins_id,jdbcType=BIGINT},
      plan_id = #{plan_id,jdbcType=BIGINT},
      product_vendor_inner_sn = #{product_vendor_inner_sn,jdbcType=INTEGER},
      product_inner_sn = #{product_inner_sn,jdbcType=INTEGER},
      specification_inner_sn = #{specification_inner_sn,jdbcType=SMALLINT},
      unit_inner_sn = #{unit_inner_sn,jdbcType=SMALLINT},
      quantity = #{quantity,jdbcType=BIGINT} *1000,
      unit_price = #{unit_price,jdbcType=BIGINT} *10000,
      sort_number = #{sort_number,jdbcType=SMALLINT},
      product_vendor_name = #{product_vendor_name,jdbcType=VARCHAR},
      product_name = #{product_name,jdbcType=VARCHAR},
      specification = #{specification,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      batch_number = #{batch_number,jdbcType=VARCHAR},
      produce_date = #{produce_date,jdbcType=DATE},
      overdue_date = #{overdue_date,jdbcType=DATE},
      back_quantity = #{back_quantity,jdbcType=BIGINT} *1000,
      sale_quantity = #{sale_quantity,jdbcType=BIGINT} *1000,
      loss_quantity = #{loss_quantity,jdbcType=BIGINT} *1000,
      loss_reason = #{loss_reason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>